#!/usr/bin/env python3
"""
Demo de Integra√ß√£o BookStack - MediaWiki to BookStack
=====================================================

Este script demonstra como usar o cliente BookStack para:
1. Conectar ao BookStack
2. Criar ou localizar um livro
3. Criar cap√≠tulos e p√°ginas
4. Importar conte√∫do extra√≠do do MediaWiki

Configura√ß√£o necess√°ria:
- URL do BookStack (ex: https://bookstack.empresa.com)
- Token ID da API
- Token Secret da API

Obtenha os tokens em: BookStack > Configura√ß√µes > API Tokens
"""

import os
import sys
from src.config_manager import ConfigManager
from src.bookstack_client import BookStackClient
from src.logger import Logger

def main():
    print("üìö Demo de Integra√ß√£o BookStack")
    print("=" * 50)
    
    # Configurar logger
    logger = Logger()
    
    # Carregar configura√ß√µes
    config_manager = ConfigManager()
    config = config_manager.load_config()
    
    # Verificar se as configura√ß√µes do BookStack est√£o dispon√≠veis
    bookstack_url = config.get('bookstack_url', '').strip()
    token_id = config.get('bookstack_token_id', '').strip()
    token_secret = config.get('bookstack_token_secret', '').strip()
    verify_ssl = config.get('bookstack_verify_ssl', True)
    
    if not all([bookstack_url, token_id, token_secret]):
        print("‚ùå Configura√ß√µes do BookStack n√£o encontradas!")
        print("\nPara usar este demo:")
        print("1. Execute a aplica√ß√£o principal (python main.py)")
        print("2. V√° em Configura√ß√µes")
        print("3. Configure as credenciais do BookStack:")
        print("   - URL Base do BookStack")
        print("   - Token ID da API")
        print("   - Token Secret da API")
        print("4. Teste a conex√£o")
        print("5. Salve as configura√ß√µes")
        return
    
    try:
        print(f"üîó Conectando ao BookStack: {bookstack_url}")
        
        # Criar cliente BookStack
        client = BookStackClient(
            base_url=bookstack_url,
            token_id=token_id,
            token_secret=token_secret,
            verify_ssl=verify_ssl
        )
        
        print("‚úÖ Conex√£o estabelecida!")
        
        # Teste 1: Listar livros existentes
        print("\nüìñ Livros dispon√≠veis:")
        books = client.get_books(limit=5)  # Corrigido: usar 'limit' ao inv√©s de 'count'
        if books:
            for book in books:
                print(f"  - {book.get('name', 'Sem nome')} (ID: {book.get('id')})")
        else:
            print("  Nenhum livro encontrado ou acesso negado")
        
        # Teste 2: Criar um livro de demonstra√ß√£o
        print("\nüìù Criando livro de demonstra√ß√£o...")
        
        demo_book_data = {
            'name': 'MediaWiki Import Demo',
            'description': 'Livro criado automaticamente pelo MediaWiki to BookStack'
        }
        
        try:
            new_book = client.create_book(demo_book_data)
            if new_book and 'id' in new_book:
                book_id = new_book['id']
                print(f"‚úÖ Livro criado com sucesso! ID: {book_id}")
                
                # Teste 3: Criar um cap√≠tulo
                print("\nüìë Criando cap√≠tulo de demonstra√ß√£o...")
                
                demo_chapter_data = {
                    'name': 'Procedimentos Importados',
                    'description': 'Cap√≠tulo com procedimentos extra√≠dos do MediaWiki',
                    'book_id': book_id
                }
                
                new_chapter = client.create_chapter(demo_chapter_data)
                if new_chapter and 'id' in new_chapter:
                    chapter_id = new_chapter['id']
                    print(f"‚úÖ Cap√≠tulo criado com sucesso! ID: {chapter_id}")
                    
                    # Teste 4: Criar uma p√°gina de exemplo
                    print("\nüìÑ Criando p√°gina de demonstra√ß√£o...")
                    
                    demo_page_data = {
                        'name': 'P√°gina de Teste - MediaWiki Import',
                        'html': '''
                        <h1>P√°gina Importada do MediaWiki</h1>
                        <p>Esta p√°gina foi criada automaticamente pelo sistema de importa√ß√£o.</p>
                        
                        <h2>Funcionalidades Implementadas:</h2>
                        <ul>
                            <li>‚úÖ Extra√ß√£o de conte√∫do do MediaWiki</li>
                            <li>‚úÖ Download autom√°tico de imagens</li>
                            <li>‚úÖ Cria√ß√£o autom√°tica no BookStack</li>
                            <li>‚úÖ Preserva√ß√£o da estrutura</li>
                        </ul>
                        
                        <h2>Pr√≥ximos Passos:</h2>
                        <ol>
                            <li>Configure o MediaWiki na aplica√ß√£o</li>
                            <li>Extraia as p√°ginas desejadas</li>
                            <li>Use a fun√ß√£o de importa√ß√£o para BookStack</li>
                        </ol>
                        
                        <p><strong>Data de cria√ß√£o:</strong> {}</p>
                        '''.format(datetime.now().strftime("%d/%m/%Y %H:%M:%S")),
                        'chapter_id': chapter_id
                    }
                    
                    new_page = client.create_page(demo_page_data)
                    if new_page and 'id' in new_page:
                        page_id = new_page['id']
                        print(f"‚úÖ P√°gina criada com sucesso! ID: {page_id}")
                        
                        # Mostrar URL da p√°gina criada
                        page_url = f"{bookstack_url}/books/{book_id}/page/{page_id}"
                        print(f"\nüåê Acesse a p√°gina em: {page_url}")
                    
                else:
                    print("‚ùå Erro ao criar p√°gina")
                    
            else:
                print("‚ùå Erro ao criar cap√≠tulo")
                
        except Exception as e:
            if "already exists" in str(e).lower():
                print("‚ÑπÔ∏è  Livro j√° existe, continuando...")
            else:
                print(f"‚ùå Erro ao criar livro: {e}")
        
        print("\n" + "=" * 50)
        print("üéâ Demo conclu√≠do com sucesso!")
        print("\nPara usar a integra√ß√£o completa:")
        print("1. Configure o MediaWiki na aplica√ß√£o principal")
        print("2. Extraia as p√°ginas que deseja importar")
        print("3. Use o bot√£o 'Importar para BookStack' (em desenvolvimento)")
        
    except Exception as e:
        print(f"‚ùå Erro na demonstra√ß√£o: {e}")
        logger.log_error("Demo BookStack", e)

if __name__ == "__main__":
    # Importa√ß√µes necess√°rias para datetime
    from datetime import datetime
    main()
