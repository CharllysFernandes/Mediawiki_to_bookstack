#!/usr/bin/env python3
"""
Script de teste para demonstrar estrat√©gias de bypass de restri√ß√µes
"""

import sys
import os

# Adicionar o diret√≥rio src ao path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from src.mediawiki_client import MediaWikiClient

def test_bypass_strategies():
    """Demonstra as estrat√©gias de bypass implementadas"""
    
    print("üîì Demonstra√ß√£o de Estrat√©gias de Bypass de Restri√ß√µes\n")
    
    # Exemplo de configura√ß√£o (substitua pelas suas credenciais reais)
    API_URL = "https://example.wiki.com/api.php"
    USERNAME = "seu_usuario"
    PASSWORD = "sua_senha"
    
    print("üìã Estrat√©gias Implementadas:")
    print("1. ‚úÖ Login com m√∫ltiplas estrat√©gias:")
    print("   - Login padr√£o com tokens")
    print("   - Login com flag de bot")
    print("   - Obten√ß√£o de tokens CSRF e edi√ß√£o")
    print("   - Headers de bypass configurados")
    
    print("\n2. ‚úÖ Requisi√ß√µes com estrat√©gias m√∫ltiplas:")
    print("   - Requisi√ß√£o padr√£o")
    print("   - Requisi√ß√£o com token CSRF")
    print("   - Requisi√ß√£o com header Referer")
    print("   - Requisi√ß√£o como form-data")
    
    print("\n3. ‚úÖ M√©todos alternativos para obter wikitext:")
    print("   - M√©todo padr√£o (query/revisions)")
    print("   - Via revis√µes hist√≥ricas")
    print("   - Via Special:Export")
    print("   - Via action=parse")
    print("   - Via URL raw direta")
    
    print("\n4. ‚úÖ Headers de bypass configurados:")
    headers_list = [
        "Accept: application/json, text/plain, */*",
        "Accept-Language: pt-BR,pt;q=0.9,en;q=0.8",
        "X-Requested-With: XMLHttpRequest",
        "Sec-Fetch-Mode: cors",
        "Cache-Control: no-cache",
        "User-Agent din√¢mico (padr√£o/bot)"
    ]
    for header in headers_list:
        print(f"   - {header}")
    
    print("\nüìù Como Usar:")
    print("1. Na interface gr√°fica:")
    print("   ‚úì Marque 'Contornar restri√ß√µes de permiss√£o'")
    print("   ‚úì Para contas com privil√©gios: marque 'Usar modo bot'")
    print("   ‚úì Configure suas credenciais normalmente")
    
    print("\n2. Programaticamente:")
    print("```python")
    print("client = MediaWikiClient(api_url, username, password)")
    print("client.bypass_restrictions = True  # Ativar bypass")
    print("client.bot_mode = True  # Para contas com privil√©gios")
    print("```")
    
    print("\nüîç O que Acontece nos Bastidores:")
    print("- Quando um erro 403 (Forbidden) √© detectado:")
    print("  1. Sistema tenta m√©todos alternativos automaticamente")
    print("  2. Usa diferentes headers e configura√ß√µes")
    print("  3. Tenta acessar via revis√µes hist√≥ricas")
    print("  4. Fallback para export e parse")
    print("  5. √öltimo recurso: acesso raw direto")
    
    print("\n‚ö° Benef√≠cios:")
    print("‚úÖ Maior taxa de sucesso na extra√ß√£o")
    print("‚úÖ Contorna restri√ß√µes de permiss√£o comuns")
    print("‚úÖ Funciona com diferentes configura√ß√µes de MediaWiki")
    print("‚úÖ Fallback autom√°tico se m√©todos falharem")
    print("‚úÖ Preserva logs detalhados de tentativas")
    
    print("\n‚ö†Ô∏è Considera√ß√µes:")
    print("- Use apenas em wikis onde voc√™ tem permiss√£o leg√≠tima")
    print("- Respeite os termos de uso da wiki")
    print("- O bypass pode ser mais lento devido √†s m√∫ltiplas tentativas")
    print("- Algumas estrat√©gias podem n√£o funcionar em todos os MediaWiki")

def test_specific_scenario():
    """Testa cen√°rio espec√≠fico com bypass"""
    print("\n" + "="*60)
    print("üß™ TESTE ESPEC√çFICO DE BYPASS")
    print("="*60)
    
    # Este √© um exemplo - voc√™ precisa configurar com dados reais
    print("Para testar com dados reais:")
    print("1. Substitua as credenciais no c√≥digo")
    print("2. Execute: python test_bypass.py")
    print("3. Observe os logs de tentativas de bypass")
    
    print("\nExemplo de uso program√°tico:")
    code_example = '''
# Configurar cliente com bypass
client = MediaWikiClient(
    api_url="https://sua-wiki.com/api.php",
    username="seu_usuario", 
    password="sua_senha",
    verify_ssl=False  # Se necess√°rio
)

# Ativar recursos de bypass
client.bypass_restrictions = True
client.bot_mode = True  # Se tiver privil√©gios

# Login com estrat√©gias m√∫ltiplas
if client.login():
    print("Login bem-sucedido!")
    
    # Tentar extrair p√°gina com bypass
    try:
        content = client.get_page_content_wikitext("Nome_da_P√°gina")
        print(f"P√°gina extra√≠da: {len(content['wikitext'])} caracteres")
    except Exception as e:
        print(f"Erro: {e}")
else:
    print("Falha no login")
'''
    print(code_example)

if __name__ == "__main__":
    test_bypass_strategies()
    test_specific_scenario()
    
    print("\n" + "="*60)
    print("üéØ CONCLUS√ÉO")
    print("="*60)
    print("O sistema de bypass implementado oferece m√∫ltiplas estrat√©gias")
    print("para contornar restri√ß√µes de permiss√£o comum em MediaWiki.")
    print("Execute sua aplica√ß√£o principal e ative as op√ß√µes de bypass")
    print("para ver os resultados em a√ß√£o!")
    print("="*60)
